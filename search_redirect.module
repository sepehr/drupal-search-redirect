<?php
// $Id$

/**
 * @file
 * Contains necessary hook implementations for Search Redirect module.
 */

/**
 * Implements hook_perm().
 */
function search_redirect_perm() {
  return array('use search redirection');
}


/**
 * Implements template_preprocess_search_results().
 */
function search_redirect_preprocess_search_results(&$variables) {
  // TODO: Consider user permissions.

  // Redirect only if there's no 'noredirect' appended.
  if (isset($_REQUEST['noredirect'])) {
    return;
  }

  // Load configs.
  $configs = variable_get(search_redirect, array(
    'node' => 1,
    'user' => 1,
    'term' => 1,
    'message' => 1,
  ));

  // Lookup terms.
  // TODO: Test, debug.
  // TODO: Compare lower-cased names.
  if ($configs['term']) {
    $result = db_result(db_query_range("SELECT tid FROM {term_data} WHERE name = '%s'", 0, 1, arg(2)));
    if ($result) {
      search_redirect_set_message();
      drupal_goto(url('taxonomy/term/' . $result->tid));
      exit();
    }
  }

  // If there's just one result.
  // And it's a node.
  if (count($variables['results']) == 1 && ($configs['node'] && $variables['type'] == 'node') || ($configs['user'] && $variables['type'] == 'user')) {
    search_redirect_set_message();
    drupal_goto($variables['results'][0]['link']);
    exit();
  }
}


/**
 * Implements hook_form_alter() for search_admin_settings form.
 */
function search_redirect_form_search_admin_settings_alter(&$form, $form_state) {
  $form['search_redirection'] = array(
    '#type' => 'fieldset',
    '#title' => t('Redirection settings'),
  );

  $form['search_redirection']['search_redirect'] = array(
    '#type' => 'checkboxes',
    '#return_value' => 1,
    '#options' => array(
      'node' => t('Redirect if there is a single result in node search <em>(to node page)</em>'),
      'user' => t('Redirect if there is a single result in user search <em>(to user profile)</em>'),
      'term' => t('Redirect if the search keyword exactly matches a term name. <em>(to that term page)</em>'),
      'message' => t('Set a message that notifies user that there were a redirection and provide a link to search without redirection.'),
    ),
    '#default_value' => variable_get('search_redirect', array(
      'node' => 1,
      'user' => 1,
      'term' => 1,
      'message' => 1,
    )),
  );
}


/**
 * Helper function to set a message.
 */
function search_redirect_set_message() {
  // TODO: Get params, implement.
  drupal_set_message(t('Haha! you just get redirected.'));
}

